
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftADDSUBleftMULDIVleftPOWADD AT COS CTG DIFFERENTIATE DIV EQ FOR FROM INTEGRATE LIMIT LP MUL NUM OVER POW RP SIN SOLVE STR SUB TG TO VAR VARIABLEcommand : equation\n                    | solve\n                    | differentiateequation : equation expression\n                    | expressionexpression : expression1\n                    | expression ADD expression1\n                    | expression SUB expression1\n                    expression1 : expression2\n                | expression1 MUL expression2\n                | expression1 DIV expression2expression2 : expression3\n                | expression2 POW expression3expression3 : LP expression RP\n                    | VAR\n                    | NUM\n                    expression3 : trigtrig : SIN LP expression RP\n                    | COS LP expression RP\n                    | TG LP expression RP\n                    | CTG LP expression RPsolve : SOLVE FOR LP vars RP EQ LP nums RP equationvars : vars VAR\n                | VARnums : nums NUM\n                | NUMdifferentiate : DIFFERENTIATE equation OVER VAR'
    
_lr_action_items = {'SOLVE':([0,],[6,]),'DIFFERENTIATE':([0,],[8,]),'LP':([0,2,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,35,37,38,39,47,48,49,50,53,57,59,],[7,7,-5,7,7,-15,-6,-9,-12,-16,-17,28,29,30,31,-4,7,7,34,7,7,7,7,7,7,7,7,-7,-8,-14,-10,-11,-13,-18,-19,-20,-21,54,7,7,]),'VAR':([0,2,5,7,8,9,10,11,12,13,14,19,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,44,45,47,48,49,50,52,57,59,],[9,9,-5,9,9,-15,-6,-9,-12,-16,-17,-4,9,9,9,9,9,9,9,9,9,9,-7,-8,45,-14,46,-10,-11,-13,52,-24,-18,-19,-20,-21,-23,9,9,]),'NUM':([0,2,5,7,8,9,10,11,12,13,14,19,20,21,24,25,26,27,28,29,30,31,32,33,35,37,38,39,47,48,49,50,54,55,56,57,58,59,],[13,13,-5,13,13,-15,-6,-9,-12,-16,-17,-4,13,13,13,13,13,13,13,13,13,13,-7,-8,-14,-10,-11,-13,-18,-19,-20,-21,56,58,-26,13,-25,13,]),'SIN':([0,2,5,7,8,9,10,11,12,13,14,19,20,21,24,25,26,27,28,29,30,31,32,33,35,37,38,39,47,48,49,50,57,59,],[15,15,-5,15,15,-15,-6,-9,-12,-16,-17,-4,15,15,15,15,15,15,15,15,15,15,-7,-8,-14,-10,-11,-13,-18,-19,-20,-21,15,15,]),'COS':([0,2,5,7,8,9,10,11,12,13,14,19,20,21,24,25,26,27,28,29,30,31,32,33,35,37,38,39,47,48,49,50,57,59,],[16,16,-5,16,16,-15,-6,-9,-12,-16,-17,-4,16,16,16,16,16,16,16,16,16,16,-7,-8,-14,-10,-11,-13,-18,-19,-20,-21,16,16,]),'TG':([0,2,5,7,8,9,10,11,12,13,14,19,20,21,24,25,26,27,28,29,30,31,32,33,35,37,38,39,47,48,49,50,57,59,],[17,17,-5,17,17,-15,-6,-9,-12,-16,-17,-4,17,17,17,17,17,17,17,17,17,17,-7,-8,-14,-10,-11,-13,-18,-19,-20,-21,17,17,]),'CTG':([0,2,5,7,8,9,10,11,12,13,14,19,20,21,24,25,26,27,28,29,30,31,32,33,35,37,38,39,47,48,49,50,57,59,],[18,18,-5,18,18,-15,-6,-9,-12,-16,-17,-4,18,18,18,18,18,18,18,18,18,18,-7,-8,-14,-10,-11,-13,-18,-19,-20,-21,18,18,]),'$end':([1,2,3,4,5,9,10,11,12,13,14,19,32,33,35,37,38,39,46,47,48,49,50,59,],[0,-1,-2,-3,-5,-15,-6,-9,-12,-16,-17,-4,-7,-8,-14,-10,-11,-13,-27,-18,-19,-20,-21,-22,]),'OVER':([5,9,10,11,12,13,14,19,24,32,33,35,37,38,39,47,48,49,50,],[-5,-15,-6,-9,-12,-16,-17,-4,36,-7,-8,-14,-10,-11,-13,-18,-19,-20,-21,]),'ADD':([5,9,10,11,12,13,14,19,23,32,33,35,37,38,39,40,41,42,43,47,48,49,50,],[20,-15,-6,-9,-12,-16,-17,20,20,-7,-8,-14,-10,-11,-13,20,20,20,20,-18,-19,-20,-21,]),'SUB':([5,9,10,11,12,13,14,19,23,32,33,35,37,38,39,40,41,42,43,47,48,49,50,],[21,-15,-6,-9,-12,-16,-17,21,21,-7,-8,-14,-10,-11,-13,21,21,21,21,-18,-19,-20,-21,]),'FOR':([6,],[22,]),'POW':([9,11,12,13,14,35,37,38,39,47,48,49,50,],[-15,27,-12,-16,-17,-14,27,27,-13,-18,-19,-20,-21,]),'MUL':([9,10,11,12,13,14,32,33,35,37,38,39,47,48,49,50,],[-15,25,-9,-12,-16,-17,25,25,-14,-10,-11,-13,-18,-19,-20,-21,]),'DIV':([9,10,11,12,13,14,32,33,35,37,38,39,47,48,49,50,],[-15,26,-9,-12,-16,-17,26,26,-14,-10,-11,-13,-18,-19,-20,-21,]),'RP':([9,10,11,12,13,14,23,32,33,35,37,38,39,40,41,42,43,44,45,47,48,49,50,52,55,56,58,],[-15,-6,-9,-12,-16,-17,35,-7,-8,-14,-10,-11,-13,47,48,49,50,51,-24,-18,-19,-20,-21,-23,57,-26,-25,]),'EQ':([51,],[53,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'command':([0,],[1,]),'equation':([0,8,57,],[2,24,59,]),'solve':([0,],[3,]),'differentiate':([0,],[4,]),'expression':([0,2,7,8,24,28,29,30,31,57,59,],[5,19,23,5,19,40,41,42,43,5,19,]),'expression1':([0,2,7,8,20,21,24,28,29,30,31,57,59,],[10,10,10,10,32,33,10,10,10,10,10,10,10,]),'expression2':([0,2,7,8,20,21,24,25,26,28,29,30,31,57,59,],[11,11,11,11,11,11,11,37,38,11,11,11,11,11,11,]),'expression3':([0,2,7,8,20,21,24,25,26,27,28,29,30,31,57,59,],[12,12,12,12,12,12,12,12,12,39,12,12,12,12,12,12,]),'trig':([0,2,7,8,20,21,24,25,26,27,28,29,30,31,57,59,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'vars':([34,],[44,]),'nums':([54,],[55,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> command","S'",1,None,None,None),
  ('command -> equation','command',1,'p_command','parser.py',27),
  ('command -> solve','command',1,'p_command','parser.py',28),
  ('command -> differentiate','command',1,'p_command','parser.py',29),
  ('equation -> equation expression','equation',2,'p_equation','parser.py',38),
  ('equation -> expression','equation',1,'p_equation','parser.py',39),
  ('expression -> expression1','expression',1,'p_expression','parser.py',48),
  ('expression -> expression ADD expression1','expression',3,'p_expression','parser.py',49),
  ('expression -> expression SUB expression1','expression',3,'p_expression','parser.py',50),
  ('expression1 -> expression2','expression1',1,'p_expression1','parser.py',59),
  ('expression1 -> expression1 MUL expression2','expression1',3,'p_expression1','parser.py',60),
  ('expression1 -> expression1 DIV expression2','expression1',3,'p_expression1','parser.py',61),
  ('expression2 -> expression3','expression2',1,'p_expression2','parser.py',68),
  ('expression2 -> expression2 POW expression3','expression2',3,'p_expression2','parser.py',69),
  ('expression3 -> LP expression RP','expression3',3,'p_expression3','parser.py',77),
  ('expression3 -> VAR','expression3',1,'p_expression3','parser.py',78),
  ('expression3 -> NUM','expression3',1,'p_expression3','parser.py',79),
  ('expression3 -> trig','expression3',1,'p_trig_factor','parser.py',92),
  ('trig -> SIN LP expression RP','trig',4,'p_trig_expression','parser.py',97),
  ('trig -> COS LP expression RP','trig',4,'p_trig_expression','parser.py',98),
  ('trig -> TG LP expression RP','trig',4,'p_trig_expression','parser.py',99),
  ('trig -> CTG LP expression RP','trig',4,'p_trig_expression','parser.py',100),
  ('solve -> SOLVE FOR LP vars RP EQ LP nums RP equation','solve',10,'p_solve_expression','parser.py',106),
  ('vars -> vars VAR','vars',2,'p_vars','parser.py',112),
  ('vars -> VAR','vars',1,'p_vars','parser.py',113),
  ('nums -> nums NUM','nums',2,'p_nums','parser.py',121),
  ('nums -> NUM','nums',1,'p_nums','parser.py',122),
  ('differentiate -> DIFFERENTIATE equation OVER VAR','differentiate',4,'p_differentiate','parser.py',130),
]
